// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model User {
  id           String    @id @default(cuid())
  name         String?
  email        String    @unique
  passwordHash String
  recipes      Recipe[] // One-to-many relation: a user can have many recipes
  accounts     Account[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Recipe {
  id          String   @id @default(cuid())
  name        String
  tagline     String
  cuisine     String
  description String
  image       String
  steps       String[] // Storing steps as an array of strings
  ingredients String
  userId      String // Foreign key to reference the user
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
